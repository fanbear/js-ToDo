{"version":3,"sources":["data/model.js","apiServices/firebase.js","render/categoryRender.js","index.js"],"names":["category","localStorage","setItem","JSON","stringify","categoryTask","styleCategory","initDataBase","firebase","initializeApp","apiKey","authDomain","projectId","firestore","AddDataBase","selector","name","ident","style","db","collection","doc","set","id","GetDataBase","getting","get","then","exists","console","log","data","catch","error","CreateCategoryItem","update","$el","document","querySelector","init","addEventListener","getValue","bind","e","preventDefault","value","target","getColorCategory","randomColor","add","getBase","min","max","Math","random","ceil","getRandom","$taskCategory","$btnCategory","showCategory","event","querySelectorAll","forEach","item","classList","remove","contains"],"mappings":"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","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":["export const category = [];\nlocalStorage.setItem('Task Category', JSON.stringify(category));\nexport const categoryTask = [];\nexport const styleCategory = [\n    'linea-blue', \n    'linea-lightblue', \n    'linea-grey', \n    'linea-lighgrey', \n    'linea-green', \n    'linea-orange'\n]","\n// var firebaseConfig = {\n//     apiKey: \"AIzaSyAYOEoI1gxCQ9p3Ncj7sIDe9zZeY9DvNHM\",\n//     authDomain: \"asome-todos.firebaseapp.com\",\n//     databaseURL: \"https://asome-todos.firebaseio.com\",\n//     projectId: \"asome-todos\",\n//     storageBucket: \"asome-todos.appspot.com\",\n//     messagingSenderId: \"1086182655557\",\n//     appId: \"1:1086182655557:web:c08775b3cb2a22fc5f052c\"\n// };\n// Initialize Cloud Firestore through Firebase\n\nfunction initDataBase() {\n    firebase.initializeApp({\n        apiKey: 'AIzaSyAYOEoI1gxCQ9p3Ncj7sIDe9zZeY9DvNHM',\n        authDomain: 'asome-todos.firebaseapp.com',\n        projectId: 'asome-todos'\n    });\n    return firebase.firestore();\n}\n\n// add element to dataBase selector = documentName, id = id = name, style = ccs class;\nexport class AddDataBase {\n    constructor(selector) {\n        this.selector = selector;\n    }\n\n    add (name, ident, style) {\n        const category = db.collection(this.selector)\n        category.doc(this.selector).set({\n            id: ident,\n            name: name,\n            style: style\n        })\n    }\n}\n\nexport class GetDataBase {\n\n    constructor(selector) {\n        this.selector = selector;\n    }\n\n    getBase() {\n        const getting = db.collection(this.selector).doc(this.selector);\n        getting.get().then(function(doc) {\n            if (doc.exists) {\n                console.log(\"Document data:\", doc.data());\n            } else {\n                // doc.data() will be undefined in this case\n                console.log(\"No such document!\");\n            }\n        }).catch(function(error) {\n            console.log(\"Error getting document:\", error);\n        });\n    }    \n\n    \n}\n\nconst db = initDataBase();","import { styleCategory, category } from '../data/model';\nimport { AddDataBase, GetDataBase } from '../apiServices/firebase'\n\n\n//получения данных из инпута и запись нового обьекта в массив\nexport class CreateCategoryItem {\n    constructor(selector, update) {\n        this.$el = document.querySelector(selector);\n        this.update = update;\n\n        this.init();\n    }\n    init () {\n        this.$el.addEventListener('submit', this.getValue.bind(this));\n    }\n    getValue(e) {\n        e.preventDefault();\n\n        const value = e.target.name.value;\n        e.target.name.value = '';\n\n        const style = new getColorCategory(styleCategory).randomColor();// получаем цвет категории\n        new AddDataBase('category').add(value, value, style);\n        new GetDataBase('category').getBase();\n    }\n}\n\n//Цвет категории\nclass getColorCategory {\n    constructor(style){\n        this.style = style;\n    }\n\n    getRandom(min, max) {\n        return Math.random() * (max - min) + min;\n    }\n\n    randomColor() {\n        return this.style[Math.ceil(this.getRandom(0, 5))];\n    }\n}\n\nnew CreateCategoryItem('.add-category') //создаем новую категорию\n\n","'use strict'\n\nimport './render/categoryRender';\nimport './apiServices/firebase';\n\nconst $taskCategory = document.querySelector('.category-wrapper');\nconst $btnCategory = document.querySelector('.btn-category');\n\n\n\n//  add .active class in task category\nfunction showCategory(event) {\n    const target = event.target;\n\n    document.querySelectorAll('.category-wrapper_item').forEach(item => item.classList.remove('active'));\n\n    if (target.classList.contains('category-wrapper_item')) {\n        target.classList.add('active');\n    }\n}\n\n$taskCategory.addEventListener('click', showCategory);"]}