{"version":3,"sources":["data/model.js","services/api.servis.js","render/categoryRender.js","index.js"],"names":["category","localStorage","setItem","JSON","stringify","categoryTask","styleCategory","initDataBase","firebase","initializeApp","apiKey","authDomain","projectId","firestore","AddCategoryDataBase","selector","name","ident","style","db","collection","doc","set","id","GetDataBase","docName","data","get","then","querySnapshot","forEach","push","exists","oneDoc","console","log","catch","error","CreateCategoryItem","update","$el","document","querySelector","init","addEventListener","getValue","bind","e","preventDefault","value","target","toLowerCase","getColorCategory","randomColor","add","getBase","min","max","Math","random","ceil","getRandom","$taskCategory","selectedCategory","event","querySelectorAll","item","classList","remove","contains"],"mappings":"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","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":["export const category = [];\nlocalStorage.setItem('Task Category', JSON.stringify(category));\nexport const categoryTask = [];\nexport const styleCategory = [\n    'linea-blue', \n    'linea-lightblue', \n    'linea-grey', \n    'linea-lighgrey', \n    'linea-green', \n    'linea-orange'\n]","\n// var firebaseConfig = {\n//     apiKey: \"AIzaSyAYOEoI1gxCQ9p3Ncj7sIDe9zZeY9DvNHM\",\n//     authDomain: \"asome-todos.firebaseapp.com\",\n//     databaseURL: \"https://asome-todos.firebaseio.com\",\n//     projectId: \"asome-todos\",\n//     storageBucket: \"asome-todos.appspot.com\",\n//     messagingSenderId: \"1086182655557\",\n//     appId: \"1:1086182655557:web:c08775b3cb2a22fc5f052c\"\n// };\n// Initialize Cloud Firestore through Firebase\n\n\n//cloud firebase initialization\nfunction initDataBase() {\n    firebase.initializeApp({\n        apiKey: 'AIzaSyAYOEoI1gxCQ9p3Ncj7sIDe9zZeY9DvNHM',\n        authDomain: 'asome-todos.firebaseapp.com',\n        projectId: 'asome-todos'\n    });\n    return firebase.firestore();\n}\n\n// add element to dataBase selector = documentName, id = id = name, style = ccs > class;\nexport class AddCategoryDataBase {\n    constructor(selector) {\n        this.selector = selector;\n    }\n\n    add (name, ident, style) {\n        const category = db.collection(this.selector);\n\n        category.doc(name).set({\n            id: ident,\n            name: name,\n            style: style\n        })\n    }\n}\n\n//get element from dataBase || get all doc\nexport class GetDataBase {\n\n    constructor(selector) {\n        this.selector = selector;\n    }\n\n    getBase(docName) {\n        let data = [];\n\n        if (!docName) {\n            db.collection(this.selector).get()\n            .then(function(querySnapshot) {\n                querySnapshot.forEach( doc => data.push(doc.data()));\n            });\n        } else {\n            db.collection(this.selector).doc(docName).get()\n            .then(function(doc) {\n                if (doc.exists) {\n                    oneDoc.push(doc.data());\n                } else {\n                    // doc.data() will be undefined in this case\n                    console.log(\"No such document!\");\n                }\n            }).catch(function(error) {\n                console.log(\"Error getting document:\", error);\n            });\n        }\n        console.log(data); \n    }    \n}\n\nconst db = initDataBase();","import { styleCategory, category } from '../data/model';\nimport { AddCategoryDataBase, GetDataBase } from '../services/api.servis'\n\n\n//получения данных из инпута и запись нового обьекта в массив\nexport class CreateCategoryItem {\n    constructor(selector, update) {\n        this.$el = document.querySelector(selector);\n        this.update = update;\n\n        this.init();\n    }\n\n    init () {\n        this.$el.addEventListener('submit', this.getValue.bind(this));\n    }\n\n    getValue(e) {\n        e.preventDefault();\n\n        const value = e.target.name.value.toLowerCase();\n        e.target.name.value = '';\n\n        const style = new getColorCategory(styleCategory).randomColor();// получаем цвет категории\n        new AddCategoryDataBase('category').add(value, value, style);\n        new GetDataBase('category').getBase();\n    }\n}\n\n//Цвет категории\nclass getColorCategory {\n    constructor(style){\n        this.style = style;\n    }\n\n    getRandom(min, max) {\n        return Math.random() * (max - min) + min;\n    }\n\n    randomColor() {\n        return this.style[Math.ceil(this.getRandom(0, 5))];\n    }\n}\n\nnew CreateCategoryItem('.add-category') //создаем новую категорию\n\n","'use strict'\n\nimport './render/categoryRender';\nimport './services/api.servis';\n\nconst $taskCategory = document.querySelector('.category-wrapper');\n\n//  add .active class in task category\nfunction selectedCategory(event) {\n    const target = event.target;\n\n    document.querySelectorAll('.category-wrapper_item').forEach(item => item.classList.remove('active'));\n\n    if (target.classList.contains('category-wrapper_item')) {\n        target.classList.add('active');\n    }\n}\n\n$taskCategory.addEventListener('click', selectedCategory);"]}